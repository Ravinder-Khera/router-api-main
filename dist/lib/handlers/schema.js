import Joi from '@hapi/joi';
export const QuoteResponseSchemaJoi = Joi.object().keys({
    quoteId: Joi.string().required(),
    amount: Joi.string().required(),
    amountDecimals: Joi.string().required(),
    quote: Joi.string().required(),
    quoteDecimals: Joi.string().required(),
    quoteGasAdjusted: Joi.string().required(),
    quoteGasAdjustedDecimals: Joi.string().required(),
    gasUseEstimateQuote: Joi.string().required(),
    gasUseEstimateQuoteDecimals: Joi.string().required(),
    gasUseEstimate: Joi.string().required(),
    gasUseEstimateUSD: Joi.string().required(),
    simulationError: Joi.boolean().optional(),
    simulationStatus: Joi.string().required(),
    gasPriceWei: Joi.string().required(),
    blockNumber: Joi.string().required(),
    route: Joi.array().items(Joi.any()).required(),
    routeString: Joi.string().required(),
    methodParameters: Joi.object({
        calldata: Joi.string().required(),
        value: Joi.string().required(),
        to: Joi.string().required(),
    }).optional(),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NoZW1hLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL2hhbmRsZXJzL3NjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEdBQUcsTUFBTSxXQUFXLENBQUE7QUF1QzNCLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUM7SUFDdEQsT0FBTyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDaEMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDL0IsY0FBYyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDdkMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDOUIsYUFBYSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDdEMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtJQUN6Qyx3QkFBd0IsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQ2pELG1CQUFtQixFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDNUMsMkJBQTJCLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtJQUNwRCxjQUFjLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLFFBQVEsRUFBRTtJQUN2QyxpQkFBaUIsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQzFDLGVBQWUsRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQ3pDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDekMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDcEMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDcEMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsUUFBUSxFQUFFO0lBQzlDLFdBQVcsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxFQUFFO0lBQ3BDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxNQUFNLENBQUM7UUFDM0IsUUFBUSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFDakMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7UUFDOUIsRUFBRSxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxRQUFRLEVBQUU7S0FDNUIsQ0FBQyxDQUFDLFFBQVEsRUFBRTtDQUNkLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBKb2kgZnJvbSAnQGhhcGkvam9pJ1xuaW1wb3J0IHsgTWV0aG9kUGFyYW1ldGVycyB9IGZyb20gJ0B1bmlzd2FwL3NtYXJ0LW9yZGVyLXJvdXRlcidcblxuZXhwb3J0IHR5cGUgVG9rZW5JblJvdXRlID0ge1xuICBhZGRyZXNzOiBzdHJpbmdcbiAgY2hhaW5JZDogbnVtYmVyXG4gIHN5bWJvbDogc3RyaW5nXG4gIGRlY2ltYWxzOiBzdHJpbmdcbn1cblxuZXhwb3J0IHR5cGUgVjNQb29sSW5Sb3V0ZSA9IHtcbiAgdHlwZTogJ3YzLXBvb2wnXG4gIGFkZHJlc3M6IHN0cmluZ1xuICB0b2tlbkluOiBUb2tlbkluUm91dGVcbiAgdG9rZW5PdXQ6IFRva2VuSW5Sb3V0ZVxuICBzcXJ0UmF0aW9YOTY6IHN0cmluZ1xuICBsaXF1aWRpdHk6IHN0cmluZ1xuICB0aWNrQ3VycmVudDogc3RyaW5nXG4gIGZlZTogc3RyaW5nXG4gIGFtb3VudEluPzogc3RyaW5nXG4gIGFtb3VudE91dD86IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBWMlJlc2VydmUgPSB7XG4gIHRva2VuOiBUb2tlbkluUm91dGVcbiAgcXVvdGllbnQ6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBWMlBvb2xJblJvdXRlID0ge1xuICB0eXBlOiAndjItcG9vbCdcbiAgYWRkcmVzczogc3RyaW5nXG4gIHRva2VuSW46IFRva2VuSW5Sb3V0ZVxuICB0b2tlbk91dDogVG9rZW5JblJvdXRlXG4gIHJlc2VydmUwOiBWMlJlc2VydmVcbiAgcmVzZXJ2ZTE6IFYyUmVzZXJ2ZVxuICBhbW91bnRJbj86IHN0cmluZ1xuICBhbW91bnRPdXQ/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGNvbnN0IFF1b3RlUmVzcG9uc2VTY2hlbWFKb2kgPSBKb2kub2JqZWN0KCkua2V5cyh7XG4gIHF1b3RlSWQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBhbW91bnQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBhbW91bnREZWNpbWFsczogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIHF1b3RlOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgcXVvdGVEZWNpbWFsczogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIHF1b3RlR2FzQWRqdXN0ZWQ6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBxdW90ZUdhc0FkanVzdGVkRGVjaW1hbHM6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBnYXNVc2VFc3RpbWF0ZVF1b3RlOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgZ2FzVXNlRXN0aW1hdGVRdW90ZURlY2ltYWxzOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgZ2FzVXNlRXN0aW1hdGU6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBnYXNVc2VFc3RpbWF0ZVVTRDogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIHNpbXVsYXRpb25FcnJvcjogSm9pLmJvb2xlYW4oKS5vcHRpb25hbCgpLFxuICBzaW11bGF0aW9uU3RhdHVzOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgZ2FzUHJpY2VXZWk6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICBibG9ja051bWJlcjogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIHJvdXRlOiBKb2kuYXJyYXkoKS5pdGVtcyhKb2kuYW55KCkpLnJlcXVpcmVkKCksXG4gIHJvdXRlU3RyaW5nOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgbWV0aG9kUGFyYW1ldGVyczogSm9pLm9iamVjdCh7XG4gICAgY2FsbGRhdGE6IEpvaS5zdHJpbmcoKS5yZXF1aXJlZCgpLFxuICAgIHZhbHVlOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcbiAgICB0bzogSm9pLnN0cmluZygpLnJlcXVpcmVkKCksXG4gIH0pLm9wdGlvbmFsKCksXG59KVxuXG5leHBvcnQgdHlwZSBRdW90ZVJlc3BvbnNlID0ge1xuICBxdW90ZUlkOiBzdHJpbmdcbiAgYW1vdW50OiBzdHJpbmdcbiAgYW1vdW50RGVjaW1hbHM6IHN0cmluZ1xuICBxdW90ZTogc3RyaW5nXG4gIHF1b3RlRGVjaW1hbHM6IHN0cmluZ1xuICBxdW90ZUdhc0FkanVzdGVkOiBzdHJpbmdcbiAgcXVvdGVHYXNBZGp1c3RlZERlY2ltYWxzOiBzdHJpbmdcbiAgZ2FzVXNlRXN0aW1hdGU6IHN0cmluZ1xuICBnYXNVc2VFc3RpbWF0ZVF1b3RlOiBzdHJpbmdcbiAgZ2FzVXNlRXN0aW1hdGVRdW90ZURlY2ltYWxzOiBzdHJpbmdcbiAgZ2FzVXNlRXN0aW1hdGVVU0Q6IHN0cmluZ1xuICBzaW11bGF0aW9uRXJyb3I/OiBib29sZWFuXG4gIHNpbXVsYXRpb25TdGF0dXM6IHN0cmluZ1xuICBnYXNQcmljZVdlaTogc3RyaW5nXG4gIGJsb2NrTnVtYmVyOiBzdHJpbmdcbiAgcm91dGU6IEFycmF5PChWM1Bvb2xJblJvdXRlIHwgVjJQb29sSW5Sb3V0ZSlbXT5cbiAgcm91dGVTdHJpbmc6IHN0cmluZ1xuICBtZXRob2RQYXJhbWV0ZXJzPzogTWV0aG9kUGFyYW1ldGVyc1xufVxuIl19